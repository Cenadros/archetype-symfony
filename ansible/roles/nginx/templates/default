map $sent_http_content_type $expires {
    default off;

    image/jpg 60d;
    image/png 60d;
    image/gif 60d;
    image/jpeg 60d;
    image/svg+xml 60d;
    image/x-icon 60d;
    image/vnd.microsoft.icon 60d;
    application/vnd.ms-fontobject 60d;
    application/x-font 60d;
    application/x-font-opentype 60d;
    application/x-font-otf 60d;
    application/x-font-truetype 60d;
    application/x-font-ttf 60d;
    application/x-font-woff 60d;
    font/opentype 60d;
    font/otf 60d;
    font/ttf 60d;
    font/woff2 60d;

    application/pdf 30d;
    video/mp4 30d;
    video/webm 30d;
    text/plain 30d;
    text/xml 30d;
    application/rss+xml 30d;
    application/xhtml+xml 30d;
    application/xml 30d;

    text/x-javascript 7d;
    text/javascript 7d;
    application/x-javascript 7d;
    application/javascript 7d;
    text/css 7d;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ webserver.name }} {% for alias in webserver.aliases %}{{ alias }} {% endfor %};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name {{ webserver.name }} {% for alias in webserver.aliases %}{{ alias }} {% endfor %};
    root {{ webserver.root }};

    client_max_body_size 0;

    # Remove final slash
    rewrite ^/((?!backoffice).+)/$ /$1 permanent;

    # Local images
    # location @production {
    #     set $production https://www.symfony.com;
    #     proxy_pass $production;
    # }
    # location ~* ^/.+\.(jpe?g|gif|png|ico|svg|pdf)$ {
    #     try_files $uri $uri/ @production;
    # }

    location / {
        try_files $uri /app_dev.php$is_args$args;
    }

    location ~ ^/(app|app_dev)\.php(/|$) {
        fastcgi_pass unix:/run/php/php{{ php.version }}-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    ssl_certificate /etc/ssl/certs/ssl.cert;
    ssl_certificate_key /etc/ssl/private/ssl.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp384r1;

    # Needed on production, disabled on local
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_dhparam /etc/nginx/dhparam.pem; // sudo openssl dhparam -out /etc/nginx/dhparam.pem 4096

    resolver_timeout 5s;
    resolver 1.1.1.1 1.0.0.1 valid=300s;

    expires $expires;
    etag off;
    server_tokens off;
    http2_push_preload on;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types application/javascript application/rss+xml application/vnd.ms-fontobject application/x-font application/x-font-opentype application/x-font-otf application/x-font-truetype application/x-font-ttf application/x-font-woff application/x-javascript application/xhtml+xml application/xml font/opentype font/otf font/ttf font/woff2 image/svg+xml image/x-icon image/vnd.microsoft.icon text/css text/javascript text/x-javascript text/plain text/xml;
}
